name: Import Terraform state
on:
  workflow_dispatch:
    inputs:
      environment:
        description: Name of the environment (in Github)
        required: true
        default: test
      tag:
        description: App component image tag
        required: true

jobs:
  provision_and_deploy:
    name: Provision and deploy using Terraform
    environment:
      name: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.TERRAFORM_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.TERRAFORM_AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      GOOGLE_CREDENTIALS: ${{ secrets.TERRAFORM_GOOGLE_CREDENTIALS }}

    steps:
      # Checkout code
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # fetch all history for all branches and tags

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform
      # Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@3d8debd658c92063839bc97da5c2427100420dec

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state,
      # downloading modules, etc.
      - name: Terraform Init
        run: |
          terraform -chdir=terraform init \
            -backend-config="bucket=${{ secrets.TERRAFORM_AWS_S3_BUCKET_NAME }}" \
            -backend-config="key=openhexa-notebooks-${{ github.event.inputs.environment }}/terraform.tfstate" \
            -backend-config="region=${{ secrets.AWS_REGION }}"

      # Terraform import
      - name: Terraform import (sql instance)
        run: |
          terraform -chdir=terraform import \
            -var 'notebooks_domain=${{ secrets.NOTEBOOKS_DOMAIN }}' \
            -var 'app_domain=${{ secrets.APP_DOMAIN }}' \
            -var 'app_url=${{ secrets.APP_URL }}' \
            -var 'notebooks_base_image_tag=${{ github.event.inputs.tag }}' \
            -var 'gcp_project_id=${{ secrets.GCP_PROJECT_ID }}' \
            -var 'gcp_region=${{ secrets.GCP_REGION }}' \
            -var 'gcp_zone=${{ secrets.GCP_ZONE }}' \
            -var 'gcp_global_address_name=${{ secrets.GCP_GLOBAL_ADDRESS_NAME }}' \
            -var 'gcp_sql_instance_tier=${{ secrets.GCP_SQL_INSTANCE_TIER }}' \
            -var 'gcp_sql_database_name=${{ secrets.GCP_SQL_DATABASE_NAME }}' \
            -var 'gcp_sql_user_name=${{ secrets.GCP_SQL_USER_NAME }}' \
            -var 'gcp_gke_default_pool_max_node_count=${{ secrets.GCP_GKE_DEFAULT_POOL_MAX_NODE_COUNT }}' \
            -var 'gcp_gke_default_pool_machine_type=${{ secrets.GCP_GKE_DEFAULT_POOL_MACHINE_TYPE }}' \
            -var 'gcp_gke_user_pool_max_node_count=${{ secrets.GCP_GKE_USER_POOL_MAX_NODE_COUNT }}' \
            -var 'gcp_gke_user_pool_machine_type=${{ secrets.GCP_GKE_USER_POOL_MACHINE_TYPE }}' \
            -var 'kubernetes_namespace=${{ secrets.KUBERNETES_NAMESPACE }}' \
            -var 'helm_proxy_https_letsencrypt_contact_email=${{ secrets.HELM_PROXY_HTTPS_LETSENCRYPT_CONTACT_EMAIL }}' \
            -var 'helm_singleuser_cpu_guarantee=${{ secrets.HELM_SINGLEUSER_CPU_GUARANTEE }}' \
            -var 'helm_singleuser_cpu_limit=${{ secrets.HELM_SINGLEUSER_CPU_LIMIT }}' \
            -var 'helm_singleuser_memory_guarantee=${{ secrets.HELM_SINGLEUSER_MEMORY_GUARANTEE }}' \
            -var 'helm_singleuser_memory_limit=${{ secrets.HELM_SINGLEUSER_MEMORY_LIMIT }}' \
            -var 'aws_region=${{ secrets.AWS_REGION }}' \
            -var 'aws_route53_zone_name=${{ secrets.AWS_ROUTE_53_ZONE_NAME }}' \
            -var 'aws_route53_record_name=${{ secrets.AWS_ROUTE_53_RECORD_NAME }}' \
            google_sql_database_instance.notebooks blsq-dip-test/hexa-prime

      - name: Terraform import (IAM SA)
        run: |
          terraform -chdir=terraform import \
            -var 'notebooks_domain=${{ secrets.NOTEBOOKS_DOMAIN }}' \
            -var 'app_domain=${{ secrets.APP_DOMAIN }}' \
            -var 'app_url=${{ secrets.APP_URL }}' \
            -var 'notebooks_base_image_tag=${{ github.event.inputs.tag }}' \
            -var 'gcp_project_id=${{ secrets.GCP_PROJECT_ID }}' \
            -var 'gcp_region=${{ secrets.GCP_REGION }}' \
            -var 'gcp_zone=${{ secrets.GCP_ZONE }}' \
            -var 'gcp_global_address_name=${{ secrets.GCP_GLOBAL_ADDRESS_NAME }}' \
            -var 'gcp_sql_instance_tier=${{ secrets.GCP_SQL_INSTANCE_TIER }}' \
            -var 'gcp_sql_database_name=${{ secrets.GCP_SQL_DATABASE_NAME }}' \
            -var 'gcp_sql_user_name=${{ secrets.GCP_SQL_USER_NAME }}' \
            -var 'gcp_gke_default_pool_max_node_count=${{ secrets.GCP_GKE_DEFAULT_POOL_MAX_NODE_COUNT }}' \
            -var 'gcp_gke_default_pool_machine_type=${{ secrets.GCP_GKE_DEFAULT_POOL_MACHINE_TYPE }}' \
            -var 'gcp_gke_user_pool_max_node_count=${{ secrets.GCP_GKE_USER_POOL_MAX_NODE_COUNT }}' \
            -var 'gcp_gke_user_pool_machine_type=${{ secrets.GCP_GKE_USER_POOL_MACHINE_TYPE }}' \
            -var 'kubernetes_namespace=${{ secrets.KUBERNETES_NAMESPACE }}' \
            -var 'helm_proxy_https_letsencrypt_contact_email=${{ secrets.HELM_PROXY_HTTPS_LETSENCRYPT_CONTACT_EMAIL }}' \
            -var 'helm_singleuser_cpu_guarantee=${{ secrets.HELM_SINGLEUSER_CPU_GUARANTEE }}' \
            -var 'helm_singleuser_cpu_limit=${{ secrets.HELM_SINGLEUSER_CPU_LIMIT }}' \
            -var 'helm_singleuser_memory_guarantee=${{ secrets.HELM_SINGLEUSER_MEMORY_GUARANTEE }}' \
            -var 'helm_singleuser_memory_limit=${{ secrets.HELM_SINGLEUSER_MEMORY_LIMIT }}' \
            -var 'aws_region=${{ secrets.AWS_REGION }}' \
            -var 'aws_route53_zone_name=${{ secrets.AWS_ROUTE_53_ZONE_NAME }}' \
            -var 'aws_route53_record_name=${{ secrets.AWS_ROUTE_53_RECORD_NAME }}' \
            google_service_account.cloud_sql_proxy blsq-dip-test/serviceAccounts/hexa-cloud-sql-proxy@blsq-dip-test.iam.gserviceaccount.com

      - name: Terraform import (IAM SA binding)
        run: |
          terraform -chdir=terraform import \
            -var 'notebooks_domain=${{ secrets.NOTEBOOKS_DOMAIN }}' \
            -var 'app_domain=${{ secrets.APP_DOMAIN }}' \
            -var 'app_url=${{ secrets.APP_URL }}' \
            -var 'notebooks_base_image_tag=${{ github.event.inputs.tag }}' \
            -var 'gcp_project_id=${{ secrets.GCP_PROJECT_ID }}' \
            -var 'gcp_region=${{ secrets.GCP_REGION }}' \
            -var 'gcp_zone=${{ secrets.GCP_ZONE }}' \
            -var 'gcp_global_address_name=${{ secrets.GCP_GLOBAL_ADDRESS_NAME }}' \
            -var 'gcp_sql_instance_tier=${{ secrets.GCP_SQL_INSTANCE_TIER }}' \
            -var 'gcp_sql_database_name=${{ secrets.GCP_SQL_DATABASE_NAME }}' \
            -var 'gcp_sql_user_name=${{ secrets.GCP_SQL_USER_NAME }}' \
            -var 'gcp_gke_default_pool_max_node_count=${{ secrets.GCP_GKE_DEFAULT_POOL_MAX_NODE_COUNT }}' \
            -var 'gcp_gke_default_pool_machine_type=${{ secrets.GCP_GKE_DEFAULT_POOL_MACHINE_TYPE }}' \
            -var 'gcp_gke_user_pool_max_node_count=${{ secrets.GCP_GKE_USER_POOL_MAX_NODE_COUNT }}' \
            -var 'gcp_gke_user_pool_machine_type=${{ secrets.GCP_GKE_USER_POOL_MACHINE_TYPE }}' \
            -var 'kubernetes_namespace=${{ secrets.KUBERNETES_NAMESPACE }}' \
            -var 'helm_proxy_https_letsencrypt_contact_email=${{ secrets.HELM_PROXY_HTTPS_LETSENCRYPT_CONTACT_EMAIL }}' \
            -var 'helm_singleuser_cpu_guarantee=${{ secrets.HELM_SINGLEUSER_CPU_GUARANTEE }}' \
            -var 'helm_singleuser_cpu_limit=${{ secrets.HELM_SINGLEUSER_CPU_LIMIT }}' \
            -var 'helm_singleuser_memory_guarantee=${{ secrets.HELM_SINGLEUSER_MEMORY_GUARANTEE }}' \
            -var 'helm_singleuser_memory_limit=${{ secrets.HELM_SINGLEUSER_MEMORY_LIMIT }}' \
            -var 'aws_region=${{ secrets.AWS_REGION }}' \
            -var 'aws_route53_zone_name=${{ secrets.AWS_ROUTE_53_ZONE_NAME }}' \
            -var 'aws_route53_record_name=${{ secrets.AWS_ROUTE_53_RECORD_NAME }}' \
            terraform import google_project_iam_binding.cloud_sql_proxy "blsq-dip-test roles/cloudsql.client"

      - name: Terraform import (GKE cluster)
        run: |
          terraform -chdir=terraform import \
            -var 'notebooks_domain=${{ secrets.NOTEBOOKS_DOMAIN }}' \
            -var 'app_domain=${{ secrets.APP_DOMAIN }}' \
            -var 'app_url=${{ secrets.APP_URL }}' \
            -var 'notebooks_base_image_tag=${{ github.event.inputs.tag }}' \
            -var 'gcp_project_id=${{ secrets.GCP_PROJECT_ID }}' \
            -var 'gcp_region=${{ secrets.GCP_REGION }}' \
            -var 'gcp_zone=${{ secrets.GCP_ZONE }}' \
            -var 'gcp_global_address_name=${{ secrets.GCP_GLOBAL_ADDRESS_NAME }}' \
            -var 'gcp_sql_instance_tier=${{ secrets.GCP_SQL_INSTANCE_TIER }}' \
            -var 'gcp_sql_database_name=${{ secrets.GCP_SQL_DATABASE_NAME }}' \
            -var 'gcp_sql_user_name=${{ secrets.GCP_SQL_USER_NAME }}' \
            -var 'gcp_gke_default_pool_max_node_count=${{ secrets.GCP_GKE_DEFAULT_POOL_MAX_NODE_COUNT }}' \
            -var 'gcp_gke_default_pool_machine_type=${{ secrets.GCP_GKE_DEFAULT_POOL_MACHINE_TYPE }}' \
            -var 'gcp_gke_user_pool_max_node_count=${{ secrets.GCP_GKE_USER_POOL_MAX_NODE_COUNT }}' \
            -var 'gcp_gke_user_pool_machine_type=${{ secrets.GCP_GKE_USER_POOL_MACHINE_TYPE }}' \
            -var 'kubernetes_namespace=${{ secrets.KUBERNETES_NAMESPACE }}' \
            -var 'helm_proxy_https_letsencrypt_contact_email=${{ secrets.HELM_PROXY_HTTPS_LETSENCRYPT_CONTACT_EMAIL }}' \
            -var 'helm_singleuser_cpu_guarantee=${{ secrets.HELM_SINGLEUSER_CPU_GUARANTEE }}' \
            -var 'helm_singleuser_cpu_limit=${{ secrets.HELM_SINGLEUSER_CPU_LIMIT }}' \
            -var 'helm_singleuser_memory_guarantee=${{ secrets.HELM_SINGLEUSER_MEMORY_GUARANTEE }}' \
            -var 'helm_singleuser_memory_limit=${{ secrets.HELM_SINGLEUSER_MEMORY_LIMIT }}' \
            -var 'aws_region=${{ secrets.AWS_REGION }}' \
            -var 'aws_route53_zone_name=${{ secrets.AWS_ROUTE_53_ZONE_NAME }}' \
            -var 'aws_route53_record_name=${{ secrets.AWS_ROUTE_53_RECORD_NAME }}' \
            terraform import google_container_cluster.cluster europe-west1-b/hexa-prime

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: |
          terraform -chdir=terraform plan \
            -out=saved_plan \
            -var 'notebooks_domain=${{ secrets.NOTEBOOKS_DOMAIN }}' \
            -var 'app_domain=${{ secrets.APP_DOMAIN }}' \
            -var 'app_url=${{ secrets.APP_URL }}' \
            -var 'notebooks_base_image_tag=${{ github.event.inputs.tag }}' \
            -var 'gcp_project_id=${{ secrets.GCP_PROJECT_ID }}' \
            -var 'gcp_region=${{ secrets.GCP_REGION }}' \
            -var 'gcp_zone=${{ secrets.GCP_ZONE }}' \
            -var 'gcp_global_address_name=${{ secrets.GCP_GLOBAL_ADDRESS_NAME }}' \
            -var 'gcp_sql_instance_tier=${{ secrets.GCP_SQL_INSTANCE_TIER }}' \
            -var 'gcp_sql_database_name=${{ secrets.GCP_SQL_DATABASE_NAME }}' \
            -var 'gcp_sql_user_name=${{ secrets.GCP_SQL_USER_NAME }}' \
            -var 'gcp_gke_default_pool_max_node_count=${{ secrets.GCP_GKE_DEFAULT_POOL_MAX_NODE_COUNT }}' \
            -var 'gcp_gke_default_pool_machine_type=${{ secrets.GCP_GKE_DEFAULT_POOL_MACHINE_TYPE }}' \
            -var 'gcp_gke_user_pool_max_node_count=${{ secrets.GCP_GKE_USER_POOL_MAX_NODE_COUNT }}' \
            -var 'gcp_gke_user_pool_machine_type=${{ secrets.GCP_GKE_USER_POOL_MACHINE_TYPE }}' \
            -var 'kubernetes_namespace=${{ secrets.KUBERNETES_NAMESPACE }}' \
            -var 'helm_proxy_https_letsencrypt_contact_email=${{ secrets.HELM_PROXY_HTTPS_LETSENCRYPT_CONTACT_EMAIL }}' \
            -var 'helm_singleuser_cpu_guarantee=${{ secrets.HELM_SINGLEUSER_CPU_GUARANTEE }}' \
            -var 'helm_singleuser_cpu_limit=${{ secrets.HELM_SINGLEUSER_CPU_LIMIT }}' \
            -var 'helm_singleuser_memory_guarantee=${{ secrets.HELM_SINGLEUSER_MEMORY_GUARANTEE }}' \
            -var 'helm_singleuser_memory_limit=${{ secrets.HELM_SINGLEUSER_MEMORY_LIMIT }}' \
            -var 'aws_region=${{ secrets.AWS_REGION }}' \
            -var 'aws_route53_zone_name=${{ secrets.AWS_ROUTE_53_ZONE_NAME }}' \
            -var 'aws_route53_record_name=${{ secrets.AWS_ROUTE_53_RECORD_NAME }}'
